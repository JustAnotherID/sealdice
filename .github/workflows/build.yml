name: Build

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  lagrange-download:
    name: Download Lagrange
    runs-on: ubuntu-latest
    steps:
      - name: Download
        run: |
          mkdir lag
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_linux-arm64_8.0.zip?v=2 > lag/Lagrange.OneBot.linux-arm64.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_linux-x64_8.0.zip?v=2 > lag/Lagrange.OneBot.linux-amd64.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_win-x64_8.0.zip?v=2 > lag/Lagrange.OneBot.windows-amd64.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_win-x86_8.0.zip?v=2 > lag/Lagrange.OneBot.windows-386.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_osx-arm64_8.0.zip?v=2 > lag/Lagrange.OneBot.darwin-arm64.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_osx-x64_8.0.zip?v=2 > lag/Lagrange.OneBot.darwin-amd64.zip
          curl https://d1.sealdice.com/lagrange/0.0.6/Lagrange.OneBot_linux-musl-arm64_8.0.zip?v=2 > lag/Lagrange.OneBot.android-arm64.zip

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: lagrange
          path: ./lag

  lagrange-gocq-download:
    name: Download Lagrange-Gocq
    runs-on: ubuntu-latest
    steps:
      - name: Download
        run: |
          mkdir lag
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_android_arm64.zip > lag/lagrange-gocq.android-arm64.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_linux_arm64.zip > lag/lagrange-gocq.linux-arm64.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_linux_amd64.zip > lag/lagrange-gocq.linux-amd64.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_windows_amd64.zip > lag/lagrange-gocq.windows-amd64.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_windows_386.zip > lag/lagrange-gocq.windows-386.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_darwin_arm64.zip > lag/lagrange-gocq.darwin-arm64.zip
          curl https://d1.sealdice.com/go-cqhttp-largrange/0.0.2/lagrange-gocq_darwin_amd64.zip > lag/lagrange-gocq.darwin-amd64.zip

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: lagrange-gocq
          path: ./lag

  lagrange-setup:
    name: Download Lagrange
    runs-on: ubuntu-latest
    needs: lagrange-download
    strategy:
      matrix:
        # target: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin, android ]
        goarch: [ '386', amd64, arm64 ]
        exclude:
          - goos: linux
            goarch: '386'
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: '386'
          - goos: darwin
            goarch: '386'
          - goos: android
            goarch: amd64
          - goos: android
            goarch: '386'
    steps:
      - name: Get Lagrange
        uses: actions/download-artifact@v4
        with:
          name: lagrange
          path: ./lagrange

      - name: Extract
        run: |
          mkdir extract
          ls ./lagrange/Lagrange.OneBot.${{ matrix.goos }}-${{ matrix.goarch }}.zip
          file ./lagrange/Lagrange.OneBot.${{ matrix.goos }}-${{ matrix.goarch }}.zip
          unzip ./lagrange/Lagrange.OneBot.${{ matrix.goos }}-${{ matrix.goarch }}.zip -d ./extract/Lagrange.OneBot.${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: lagrange.${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./extract/Lagrange.OneBot.${{ matrix.goos }}-${{ matrix.goarch }}

  lagrange-gocq-setup:
    name: Download Lagrange-Gocq
    runs-on: ubuntu-latest
    needs: lagrange-gocq-download
    strategy:
      matrix:
        # target: linux/amd64, linux/arm64, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin, android ]
        goarch: [ '386', amd64, arm64 ]
        exclude:
          - goos: linux
            goarch: '386'
          - goos: windows
            goarch: arm64
          - goos: windows
            goarch: '386'
          - goos: darwin
            goarch: '386'
          - goos: android
            goarch: amd64
          - goos: android
            goarch: '386'
    steps:
      - name: Get Lagrange-Gocq
        uses: actions/download-artifact@v4
        with:
          name: lagrange-gocq
          path: ./lagrange

      - name: Extract
        run: |
          mkdir extract
          ls ./lagrange/lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}.zip
          file ./lagrange/lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}.zip
          unzip ./lagrange/lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}.zip -d ./extract/lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./extract/lagrange-gocq.${{ matrix.goos }}-${{ matrix.goarch }}

  ui-build:
    name: Build UI
    runs-on: ubuntu-latest
    steps:
      - name: Code
        uses: actions/checkout@v4

      - name: Get Commit ID
        run: |
          cd sealdice-ui
          echo "UI_CID=`git rev-parse --short HEAD`" >> $GITHUB_ENV;

      - name: Cache ui dist get
        id: cache-ui-dist
        uses: actions/cache@v4
        env:
          cache-name: cache-ui-dist
        with:
          path: ./ui/dist
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ env.UI_CID }}

      - if: ${{ steps.cache-ui-dist.outputs.cache-hit == 'true' }}
        name: Show cache
        continue-on-error: true
        run: ls ./sealdice-ui/dist

      - name: Install Pnpm
        uses: pnpm/action-setup@v4
        if: ${{ steps.cache-ui-dist.outputs.cache-hit != 'true' }}
        with:
          version: 10
          run_install: false

      - name: Install Node
        uses: actions/setup-node@v4
        if: ${{ steps.cache-ui-dist.outputs.cache-hit != 'true' }}
        with:
          node-version: 20
      - name: Install Dependencies
        if: ${{ steps.cache-ui-dist.outputs.cache-hit != 'true' }}
        working-directory: ./sealdice-ui
        run: pnpm install
      - name: Build WebUI
        if: ${{ steps.cache-ui-dist.outputs.cache-hit != 'true' }}
        working-directory: ./sealdice-ui
        run: pnpm run build-only

      - name: Upload UI
        uses: actions/upload-artifact@v4
        with:
          name: sealdice-ui
          path: ./sealdice-ui/dist
